// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model auth {
  id           Int @default(autoincrement()) @id
  username     String @unique
  email        String @unique
  password     String
  role         String
}

model Worker {
  id           Int @default(autoincrement()) @id
  username     String @unique
  email        String @unique
  password     String
  firstName    String
  lastName     String
  oib          String
  address      String
  dateOfBirth  DateTime
  phoneNumber  String
  position     String
  pay          Int
  role         String
  contract     Contract[]
}

model Client {
  id           Int @default(autoincrement()) @id
  email        String @unique
  firstName    String
  lastName     String
  oib          String
  address      String
  dateOfBirth  DateTime
  phoneNumber  String
  contract     Contract[]
}

model Vehicle {
  id           Int @default(autoincrement()) @id
  plates       String @unique
  make         String
  model        String
  year         Int
  seats        Int
  transmission String
  consumption  Float?
  fuel         String
  price        Float
  rented       Boolean @default(false)
  contract     Contract[]
}

model Office {
  id           Int @default(autoincrement()) @id
  address      String
  phoneNumber  String
  workHours    String
}

model Collaborator {
  id           Int @default(autoincrement()) @id
  name         String
  type         String
  description  String
  website      String
}

model Contract {
  id           Int @default(autoincrement()) @id
  client       Client @relation(fields: [clientId], references: [id])
  clientId     Int
  vehicle      Vehicle @relation(fields: [vehicleId], references: [id])
  vehicleId    Int
  worker       Worker @relation(fields: [workerId], references: [id])
  workerId     Int
  rentedFrom   DateTime
  rentedUntil  DateTime
  price        Int
  openReturn   Boolean
  insurance    Boolean
}